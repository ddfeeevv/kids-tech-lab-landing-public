import React from 'react';
import { motion } from 'framer-motion';
import { Link } from 'react-router-dom';
import { Printer, Cpu, Blocks, Monitor, Zap, Target, Users, Clock } from 'lucide-react';

const Courses = () => {
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        delayChildren: 0.3,
        staggerChildren: 0.2
      }
    }
  };

  const itemVariants = {
    hidden: { y: 30, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1
    }
  };

  const courses = [
    {
      icon: Printer,
      title: "3D-–ø–µ—á–∞—Ç—å",
      description: "–ò–∑—É—á–∞–µ–º –æ—Å–Ω–æ–≤—ã 3D-–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–µ—á–∞—Ç–∏. –°–æ–∑–¥–∞–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–≥—Ä—É—à–∫–∏, —É–∫—Ä–∞—à–µ–Ω–∏—è –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã.",
      features: ["Tinkercad", "3D-–ø—Ä–∏–Ω—Ç–µ—Ä", "–ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ü–µ—á–∞—Ç—å"],
      color: "from-blue-500 to-cyan-500",
      bgColor: "bg-blue-50",
      iconColor: "text-blue-600",
      link: "/course/3d"
    },
    {
      icon: Cpu,
      title: "Arduino",
      description: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–µ–º –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã, —Å–æ–∑–¥–∞–µ–º —É–º–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã.",
      features: ["–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–°—Ö–µ–º—ã", "–î–∞—Ç—á–∏–∫–∏", "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"],
      color: "from-green-500 to-emerald-500",
      bgColor: "bg-green-50",
      iconColor: "text-green-600",
      link: "/course/arduino"
    },
    {
      icon: Blocks,
      title: "–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞",
      description: "–ö–æ–Ω—Å—Ç—Ä—É–∏—Ä—É–µ–º —Ä–æ–±–æ—Ç–æ–≤ –∏ –º–µ—Ö–∞–Ω–∏–∑–º—ã, –∏–∑—É—á–∞–µ–º –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤.",
      features: ["–ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ", "–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞", "–ú–µ—Ö–∞–Ω–∏–∫–∞", "–õ–æ–≥–∏–∫–∞"],
      color: "from-orange-500 to-red-500",
      bgColor: "bg-orange-50",
      iconColor: "text-orange-600",
      link: "/course/robotics"
    },
    {
      icon: Monitor,
      title: "IT-–≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å",
      description: "–ò–∑—É—á–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –∏ –æ—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.",
      features: ["–ö–æ–º–ø—å—é—Ç–µ—Ä", "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç", "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ"],
      color: "from-purple-500 to-pink-500",
      bgColor: "bg-purple-50",
      iconColor: "text-purple-600",
      link: "/course/it"
    }
  ];

  const benefits = [
    { icon: Zap, title: "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã", desc: "–ö–∞–∂–¥–æ–µ –∑–∞–Ω—è—Ç–∏–µ ‚Äî —ç—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞" },
    { icon: Target, title: "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥", desc: "–£—á–∏—Ç—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ —Ä–µ–±–µ–Ω–∫–∞" },
    { icon: Users, title: "–†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ", desc: "–£—á–∏–º—Å—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å –∏ –¥–µ–ª–∏—Ç—å—Å—è –∏–¥–µ—è–º–∏" },
    { icon: Clock, title: "–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫", desc: "–ó–∞–Ω—è—Ç–∏—è –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –¥–µ—Ç–µ–π –∏ —Ä–æ–¥–∏—Ç–µ–ª–µ–π" }
  ];

  return (
    <section id="courses" className="section-padding bg-gradient-to-br from-gray-50 to-blue-50">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <motion.div
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, amount: 0.3 }}
          className="text-center mb-16"
        >
          <motion.h2 
            variants={itemVariants}
            className="text-4xl font-bold text-gray-900 mb-6"
          >
            –ß—Ç–æ –º—ã –∏–∑—É—á–∞–µ–º
          </motion.h2>
          <motion.p 
            variants={itemVariants}
            className="text-xl text-gray-600 max-w-3xl mx-auto"
          >
            –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –¥–µ—Ç—è–º —Ä–∞–∑–≤–∏—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, 
            —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Ü–∏—Ñ—Ä–æ–≤–æ–º—É –±—É–¥—É—â–µ–º—É
          </motion.p>
          <motion.div 
            variants={itemVariants}
            className="mt-6"
          >
            <span className="inline-block bg-gradient-to-r from-green-500 to-emerald-500 text-white px-8 py-3 rounded-full text-xl font-bold shadow-lg">
              üéÅ –í–°–ï –ö–£–†–°–´ –ê–ë–°–û–õ–Æ–¢–ù–û –ë–ï–°–ü–õ–ê–¢–ù–´!
            </span>
          </motion.div>
        </motion.div>

        {/* Courses Grid */}
        <motion.div
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, amount: 0.2 }}
          className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-16"
        >
          {courses.map((course, index) => (
            <motion.div
              key={index}
              variants={itemVariants}
              whileHover={{ y: -5 }}
              className="group"
            >
              <Link to={course.link} className="block">
                <div className={`${course.bgColor} rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 h-full cursor-pointer`}>
                {/* Icon */}
                <div className="flex items-center mb-6">
                  <div className={`w-16 h-16 bg-gradient-to-r ${course.color} rounded-xl flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300`}>
                    <course.icon size={32} className="text-white" />
                  </div>
                  <h3 className="text-2xl font-bold text-gray-900 ml-4">{course.title}</h3>
                </div>

                {/* Description */}
                <p className="text-gray-600 mb-6 leading-relaxed">
                  {course.description}
                </p>

                {/* Features */}
                <div className="space-y-2">
                  {course.features.map((feature, featureIndex) => (
                    <div key={featureIndex} className="flex items-center">
                      <div className={`w-2 h-2 bg-gradient-to-r ${course.color} rounded-full mr-3`}></div>
                      <span className="text-gray-700 font-medium">{feature}</span>
                    </div>
                  ))}
                </div>
                </div>
              </Link>
            </motion.div>
          ))}
        </motion.div>

        {/* Benefits Section */}
        <motion.div
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, amount: 0.3 }}
          className="bg-white rounded-2xl p-8 shadow-lg"
        >
          <motion.h3 
            variants={itemVariants}
            className="text-3xl font-bold text-center text-gray-900 mb-12"
          >
            –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å
          </motion.h3>
          
          <motion.div 
            variants={containerVariants}
            className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8"
          >
            {benefits.map((benefit, index) => (
              <motion.div
                key={index}
                variants={itemVariants}
                whileHover={{ scale: 1.05 }}
                className="text-center"
              >
                <div className="w-16 h-16 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full flex items-center justify-center mx-auto mb-4 shadow-lg">
                  <benefit.icon size={28} className="text-white" />
                </div>
                <h4 className="text-lg font-semibold text-gray-900 mb-2">{benefit.title}</h4>
                <p className="text-gray-600 text-sm">{benefit.desc}</p>
              </motion.div>
            ))}
          </motion.div>
        </motion.div>
      </div>
    </section>
  );
};

export default Courses;
